// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Enums
enum MatchType {
  NORMAL
  FIXED
  PLACEHOLDER
}

enum Privacy {
  PUBLIC
  PRIVATE
}

// Models
model User {
  id               String         @id @default(cuid())
  email            String         @unique
  name             String?
  role             String?
  matchesOrganized Match[]        @relation("OrganizerMatches")
  participations   MatchPlayer[]
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
}

model Club {
  id       String  @id @default(cuid())
  name     String
  courts   Court[]
  matches  Match[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Court {
  id      String @id @default(cuid())
  clubId  String
  club    Club   @relation(fields: [clubId], references: [id])
  number  Int
  matches Match[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([clubId, number])
}

model Match {
  id        String   @id @default(cuid())
  clubId    String
  club      Club     @relation(fields: [clubId], references: [id])
  courtId   String?
  court     Court?   @relation(fields: [courtId], references: [id])
  organizerId String?
  organizer User?    @relation("OrganizerMatches", fields: [organizerId], references: [id])
  type      MatchType @default(NORMAL)
  privacy   Privacy   @default(PUBLIC)
  start     DateTime
  end       DateTime

  provisionalExpiresAt DateTime?
  nextRecurringMatchId String?
  nextRecurringMatch   Match?    @relation("NextRecurring", fields: [nextRecurringMatchId], references: [id])
  previousRecurringMatches Match[] @relation("NextRecurring")

  players   MatchPlayer[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([clubId, start])
  @@index([courtId, start])
}

model MatchPlayer {
  id       String  @id @default(cuid())
  matchId  String
  match    Match   @relation(fields: [matchId], references: [id])
  userId   String
  user     User    @relation(fields: [userId], references: [id])
  isOrganizer Boolean @default(false)
  createdAt DateTime @default(now())

  @@unique([matchId, userId])
}
